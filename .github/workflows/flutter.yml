name: Flutter

on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  build:
    name: 'Build (version: ${{ matrix.version }}, target: ${{ matrix.target }}, os: ${{ matrix.os }})'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        target: ['apk', 'appbundle', 'windows']
        version: ['release', 'debug']
        include:
          - os: ubuntu-latest
            target: apk
            version: split-per-abi
            path: build/app/outputs/flutter-apk
          - os: ubuntu-latest
            target: apk
            path: build/app/outputs/flutter-apk
          - os: ubuntu-latest
            target: appbundle
            path: build/app/outputs/flutter-apk
          - os: windows-latest
            target: windows
            version: release
            path: build\windows\runner\Release
          - os: windows-latest
            target: windows
            version: debug
            path: build\windows\runner\Debug
        exclude:
          - os: ubuntu-latest
            target: windows
          - os: windows-latest
            target: apk
          - os: windows-latest
            target: appbundle
          - target: appbundle
            version: debug
    steps:
      - uses: actions/checkout@v3
      - name: Setup Java (Temurin 17)
        uses: actions/setup-java@v3
        if: matrix.target == 'apk' || matrix.target == 'appbundle'
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Verify Flutter instalation
        run: flutter doctor -v
      - name: Fetch dependencies
        run: flutter pub get
      - name: Build ${{ matrix.version }} version
        run: flutter build ${{ matrix.target }} --${{ matrix.version }}
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: youniversity_app-${{ matrix.target }}-${{ matrix.version }}
          path: ${{ matrix.path }}
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Fetch dependencies
        run: flutter pub get
      - name: Run the Dart and Flutter analyzer
        run: flutter analyze
      - name: Ensure the Dart code is formatted correctly
        run: flutter format --set-exit-if-changed --dry-run .
      - name: Run unit tests
        run: flutter test
